<?xml version="1.0" encoding="utf-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->


<!--- Use this skin on instances of AccordionContent being added to a Horizontal Accordion.
      This skin places the header and content in a HorizontalLayout and rotates the header.
      Uses a resize effect to transition between open and closed states.

@see spark.components.AccordionContent

@langversion 3.0
@playerversion Flash 11
@playerversion AIR 3.0
@productversion Flex 5.0
-->

<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
        xmlns:s="library://ns.adobe.com/flex/spark" 
        xmlns:fb="http://ns.adobe.com/flashbuilder/2009" 
        alpha.disabled="0.5" >
    <fx:Metadata>[HostComponent("spark.components.AccordionContent")]</fx:Metadata>
    
    <fx:Script fb:purpose="styling">
        <![CDATA[         
            
            /**
             *  @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
            {
                // Push backgroundColor and backgroundAlpha directly.
                // Handle undefined backgroundColor by hiding the background object.
                if (!isNaN(getStyle("backgroundColor")))
                {
                    bgFill.color = getStyle("backgroundColor");
                    bgFill.alpha = getStyle("backgroundAlpha");
                }

                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }

        ]]>        
    </fx:Script>
    
    <s:states>
        <s:State name="normal" stateGroups="closedGroup"/>
        <s:State name="disabled" stateGroups="closedGroup"/>
        <s:State name="open" stateGroups="openGroup"/>
        <s:State name="openAndDisabled" stateGroups="openGroup"/>
    </s:states>
    
    <s:transitions>
        <!-- Transitions between selected and unselected states-->
        <s:Transition fromState="normal" toState="open" autoReverse="true">
            <s:Resize target ="{hostComponent}" duration="250"  /> 
        </s:Transition>
        
        <s:Transition fromState="disabled" toState="open" autoReverse="true">
            <s:Resize target="{hostComponent}" duration="250" />
        </s:Transition>
        
        <s:Transition fromState="normal" toState="openAndDisabled" autoReverse="true">
            <s:Resize target="{hostComponent}" duration="250"/>
        </s:Transition>
        
        <s:Transition fromState="disabled" toState="openAndDisabled" autoReverse="true" >
            <s:Resize target="{hostComponent}" duration="250" />
        </s:Transition>
    </s:transitions>
    
    <s:layout>
        <s:HorizontalLayout gap="-2"/>
    </s:layout>
    
    <s:ToggleButton id="accordionHeader"
                    top="0"
                    height="100%"
                    depth="1"
                    rotation="-90" 
                    skinClass="spark.skins.spark.HorizontalAccordionToggleButtonSkin"/>   
    
    <s:Group width="100%" height="100%"
             clipAndEnableScrolling="true">
        
        <!-- border -->
        <s:Rect id="border" left="0" right="0" top="1" bottom="1">
            <s:stroke>
                <!--- @private -->
                <s:SolidColorStroke id="borderStroke" />
            </s:stroke>
        </s:Rect>
        
        <!-- background -->
        <s:Rect id="background" top="2" bottom="2" left="1" right="1">
            <s:fill>
                <!--- @private -->
                <s:SolidColor id="bgFill"/>
            </s:fill>
        </s:Rect>
        
        <s:Rect left="1" top="2" bottom="2" width="3">
            <s:fill>
                <s:LinearGradient>
                    <s:GradientEntry alpha="0.15"/>
                    <s:GradientEntry alpha="0"/>
                </s:LinearGradient>
            </s:fill>
        </s:Rect>
        
        <s:Rect right="1" top="1" bottom="1" width="3">
            <s:fill>
                <s:LinearGradient>
                    <s:GradientEntry alpha="0"/>
                    <s:GradientEntry alpha="0.15"/>
                </s:LinearGradient>
            </s:fill>
        </s:Rect>
        
        <s:Group id="contentGroup" 
                 left="1" right="1" top="2" bottom="2"
                 clipAndEnableScrolling="true"/>
        
    </s:Group>
    
</s:Skin>
