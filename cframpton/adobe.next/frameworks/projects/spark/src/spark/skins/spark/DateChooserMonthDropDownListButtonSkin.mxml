<?xml version="1.0" encoding="utf-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->


<!--- The default skin class for the anchor button on a Spark DropDownList component.  

      @see spark.components.DropDownList        
      @see spark.skins.spark.DropDownListSkin
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009" minWidth="21" minHeight="21">
    
    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.Button")]
    ]]>
    </fx:Metadata> 
    
     <fx:Script fb:purpose="styling">
         /* Define the skin elements that should not be colorized. 
            For dropDownList buttons, the graphics are colorized but the arrow is not. */
         static private const exclusions:Array = ["arrow"];

         /**
          * @private
          */  
         //override public function get colorizeExclusions():Array {return exclusions;}
        
         /* Define the symbol fill items that should be colored by the "symbolColor" style. */
         static private const symbols:Array = ["arrowFill1", "arrowFill2"];

         /**
          * @private
          */
         //override public function get symbolItems():Array {return symbols};
         
         /**
          * @private
          */
         override protected function initializationComplete():void
         {
             useChromeColor = true;
             super.initializationComplete();
         }
         
         /**
          *  @private
          */
         override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
         {
             var cr:Number = getStyle("cornerRadius");
             /*
             if (cornerRadius != cr)
             {
                 cornerRadius = cr;
                 shadow.radiusX = cornerRadius;
                 fill.radiusX = cornerRadius;
                 lowlight.radiusX = cornerRadius;
                 highlight.radiusX = cornerRadius;
                 border.radiusX = cornerRadius;
             }
             
             if (highlightStroke) highlightStroke.radiusX = cornerRadius;
             if (hldownstroke1) hldownstroke1.radiusX = cornerRadius;
             if (hldownstroke2) hldownstroke2.radiusX = cornerRadius;
             */
             
             super.updateDisplayList(unscaledWidth, unscaledHeight);
         }
     
     private var cornerRadius:Number = 2;
    </fx:Script>
      
    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" />
        <s:State name="down" />
        <s:State name="disabled" />
    </s:states>
    
    <!--s:Rect x="0.5" y="0.5" width="70" height="22" alpha="0"-->
    <s:Rect left="1" right="1" top="1" bottom="1" alpha="0">
           <s:stroke>
            <s:SolidColorStroke caps="none" color="#5C5C5C" joints="miter" miterLimit="4" weight="1"/>
        </s:stroke>
        <s:fill>
            <s:SolidColor color="#FFFFFF"/>
        </s:fill>
    </s:Rect>
    
    <!--- @copy spark.components.DropDownList#labelDisplay -->
    <s:Label id="labelDisplay" verticalAlign="middle" maxDisplayedLines="1" text="September"
             mouseEnabled="false" mouseChildren="false"
             left="1" right="1" top="2" bottom="2" verticalCenter="1"/> 
    
    <s:Line includeIn="down,over" left="0" right="0" bottom="1">
        <s:stroke>
            <s:SolidColorStroke caps="none" color="#5C5C5C" joints="miter" miterLimit="4" weight="1"/>
        </s:stroke>
    </s:Line>
</s:SparkSkin>
