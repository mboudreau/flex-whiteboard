<?xml version="1.0" encoding="utf-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<s:FormItem xmlns:fx="http://ns.adobe.com/mxml/2009"
            xmlns:s="library://ns.adobe.com/flex/spark"
            xmlns:mx="library://ns.adobe.com/flex/mx"
            xmlns:parsley="http://www.spicefactory.org/parsley"
            xmlns:behavior="org.apache.flex.utilities.developerToolSuite.presentation.behavior.*"
            label="ANT_HOME"
            required="true"
            styleName="stackedFormItem">


    <fx:Declarations>
        <parsley:Configure/>


        <behavior:ToolPathValidator id="validator" required="true" source="{this}" property="antHomePathValidated"
                                    trigger="{toolHomeLocation}"
                                    listener="{toolHomeLocation}"/>
    </fx:Declarations>

    <s:HGroup gap="0">
        <s:TextInput id="toolHomeLocation" width="240" change="toolHomeLocation_changeHandler(event)"/>
        <mx:Button id="browseButton" label="..." width="28"
                   toolTip="{resourceManager.getString('SettingsWindow', 'BROWSE_ANT_HOME')}"
                   click="browseButton_clickHandler(event)"/>
    </s:HGroup>
    <s:helpContent>
        <s:VGroup>
            <s:Label text="{resourceManager.getString('SettingsWindow', 'INDICATE_ANT_HOME')}"/>
            <mx:LinkButton label="(Ant Home Page)"
                           click="navigateToURL(new URLRequest('http://ant.apache.org/'));"/>
        </s:VGroup>
    </s:helpContent>
    <fx:Script><![CDATA[
        import mx.rpc.Responder;

        import org.apache.flex.utilities.developerToolSuite.executor.infrastructure.message.SaveSettingMessage;
        import org.apache.flex.utilities.developerToolSuite.executor.infrastructure.message.ValidateAntHomePathMessage;
        import org.apache.flex.utilities.developerToolSuite.presentation.behavior.settingsPanel.IGeneralSettingsPM;

        import spark.events.TextOperationEvent;

        private var _file:File;

        private var _antHomePathValidated:Boolean;

        private var _responder:mx.rpc.Responder;

        [MessageDispatcher]
        public var dispatch:Function;

        [Inject]
        public var model:IGeneralSettingsPM;

        [Init]
        public function init():void {
            _responder = new mx.rpc.Responder(antHomePathResult, antHomePathValidatedError)
            toolHomeLocation.text = model.antHomePath;
            dispatch(new ValidateAntHomePathMessage(toolHomeLocation.text, _responder));
        }

        private function browseButton_clickHandler(event:MouseEvent):void {
            try {
                _file = new File(toolHomeLocation.text.replace("\\", "/"));
            } catch (err:Error) {
                _file = new File();
            }

            _file.addEventListener(Event.SELECT, file_select);
            _file.browseForDirectory(resourceManager.getString('SettingsWindow', 'PLEASE_INDICATE_ANT_HOME'));
        }

        private function file_select(evt:Event):void {
            toolHomeLocation.text = _file.nativePath;
            dispatch(new ValidateAntHomePathMessage(toolHomeLocation.text, _responder));
        }

        private function toolHomeLocation_changeHandler(event:TextOperationEvent):void {
            dispatch(new ValidateAntHomePathMessage(toolHomeLocation.text, _responder));
        }

        private function antHomePathResult(result:Boolean):void {
            antHomePathValidated = true;

            if (antHomePathValidated) {
                dispatch(new SaveSettingMessage("ANT_HOME", toolHomeLocation.text));
            }
        }

        private function antHomePathValidatedError(result:Boolean):void {
            antHomePathValidated = false;
        }

        public function get antHomePathValidated():Boolean {
            return _antHomePathValidated;
        }

        public function set antHomePathValidated(value:Boolean):void {
            _antHomePathValidated = value;
            validator.validate();
        }
        ]]></fx:Script>
</s:FormItem>
